@article{endres1975analysis,
  title={An analysis of errors and their causes in system programs},
  author={Endres, Albert},
  journal={IEEE Transactions on Software Engineering},
  number={2},
  pages={140--149},
  year={1975},
  publisher={IEEE}
}

@article{xu2005survey,
  title={Survey of clustering algorithms},
  author={Xu, Rui and Wunsch, Donald},
  journal={IEEE Transactions on neural networks},
  volume={16},
  number={3},
  pages={645--678},
  year={2005},
  publisher={IEEE}
}

@inproceedings{spadini2018pydriller,
  title={Pydriller: {Python} framework for mining software repositories},
  author={Spadini, Davide and Aniche, Maur{\'\i}cio and Bacchelli, Alberto},
  booktitle={Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},
  pages={908--911},
  year={2018}
}

@inproceedings{ester1996density,
  added-at = {2018-11-15T11:48:51.000+0100},
  author = {Ester, Martin and Kriegel, Hans-Peter and Sander, J{\"o}rg and Xu, Xiaowei and others},
  biburl = {https://www.bibsonomy.org/bibtex/2b1f96a96ed950d068d5d0c83d9efa623/lautenschlager},
  booktitle = {Kdd},
  interhash = {05e1b10fce6fb01ff19c8aff59230d4d},
  intrahash = {b1f96a96ed950d068d5d0c83d9efa623},
  keywords = {citedby:scholar:count:13401 citedby:scholar:timestamp:2018-11-15},
  number = 34,
  pages = {226--231},
  timestamp = {2018-11-20T14:39:00.000+0100},
  title = {A density-based algorithm for discovering clusters in large spatial databases with noise.},
  volume = 96,
  year = 1996
}

@article{goues2019automated,
  title={Automated program repair},
  author={Le Goues, Claire and Pradel, Michael and Roychoudhury, Abhik},
  journal={Communications of the ACM},
  volume={62},
  number={12},
  pages={56--65},
  year={2019},
  publisher={ACM New York, NY, USA}
}

@article{liu2018survey,
  title={A Survey of Test Based Automatic Program Repair.},
  author={Liu, Yuzhen and Zhang, Long and Zhang, Zhenyu},
  journal={J. Softw.},
  volume={13},
  number={8},
  pages={437--452},
  year={2018}
}

@inproceedings{jeffrey2009bugfix,
  title={BugFix: A learning-based tool to assist developers in fixing bugs},
  author={Jeffrey, Dennis and Feng, Min and Gupta, Neelam and Gupta, Rajiv},
  booktitle={2009 IEEE 17th International Conference on Program Comprehension},
  pages={70--79},
  year={2009},
  organization={IEEE}
}

@article{wong2016survey,
  title={A survey on software fault localization},
  author={Wong, W Eric and Gao, Ruizhi and Li, Yihao and Abreu, Rui and Wotawa, Franz},
  journal={IEEE Transactions on Software Engineering},
  volume={42},
  number={8},
  pages={707--740},
  year={2016},
  publisher={IEEE}
}

@inproceedings{monperrus2014critical,
  title={"A critical review of automatic patch generation learned from human-written patches": Essay on the problem statement and the evaluation of automatic software repair},
  author={Monperrus, Martin},
  booktitle={Proceedings of the 36th International Conference on Software Engineering},
  pages={234--242},
  year={2014}
}

@article{alon2019code2vec,
  title={code2vec: Learning distributed representations of code},
  author={Alon, Uri and Zilberstein, Meital and Levy, Omer and Yahav, Eran},
  journal={Proceedings of the ACM on Programming Languages},
  volume={3},
  number={POPL},
  pages={1--29},
  year={2019},
  publisher={ACM New York, NY, USA}
}

@article{alon2018general,
  title={A general path-based representation for predicting program properties},
  author={Alon, Uri and Zilberstein, Meital and Levy, Omer and Yahav, Eran},
  journal={ACM SIGPLAN Notices},
  volume={53},
  number={4},
  pages={404--419},
  year={2018},
  publisher={ACM New York, NY, USA}
}

@inproceedings{raychev2016learning,
    author = {Raychev, Veselin and Bielik, Pavol and Vechev, Martin and Krause, Andreas},
    title = {Learning Programs from Noisy Data},
    year = 2016,
    isbn = 9781450335492,
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/2837614.2837671},
    doi = {10.1145/2837614.2837671},
    abstract = {We present a new approach for learning programs from noisy datasets. Our approach is based on two new concepts: a regularized program generator which produces a candidate program based on a small sample of the entire dataset while avoiding overfitting, and a dataset sampler which carefully samples the dataset by leveraging the candidate program's score on that dataset. The two components are connected in a continuous feedback-directed loop. We show how to apply this approach to two settings: one where the dataset has a bound on the noise, and another without a noise bound. The second setting leads to a new way of performing approximate empirical risk minimization on hypotheses classes formed by a discrete search space. We then present two new kinds of program synthesizers which target the two noise settings. First, we introduce a novel regularized bitstream synthesizer that successfully generates programs even in the presence of incorrect examples. We show that the synthesizer can detect errors in the examples while combating overfitting -- a major problem in existing synthesis techniques. We also show how the approach can be used in a setting where the dataset grows dynamically via new examples (e.g., provided by a human). Second, we present a novel technique for constructing statistical code completion systems. These are systems trained on massive datasets of open source programs, also known as ``Big Code''. The key idea is to introduce a domain specific language (DSL) over trees and to learn functions in that DSL directly from the dataset. These learned functions then condition the predictions made by the system. This is a flexible and powerful technique which generalizes several existing works as we no longer need to decide a priori on what the prediction should be conditioned (another benefit is that the learned functions are a natural mechanism for explaining the prediction). As a result, our code completion system surpasses the prediction capabilities of existing, hard-wired systems.},
    booktitle = {Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    pages = {761â€“774},
    numpages = 14,
    keywords = {Noisy Data, Big Code, Statistical Code Completion, Anomaly Detection, Regularization, Program Synthesis},
    location = {St. Petersburg, FL, USA},
    series = {POPL '16}
}

@article{chen2019literature,
  title={A literature study of embeddings on source code},
  author={Chen, Zimin and Monperrus, Martin},
  journal={arXiv preprint arXiv:1904.03061},
  year={2019}
}

@inproceedings{bielik2016phog,
  title={{PHOG}: probabilistic model for code},
  author={Bielik, Pavol and Raychev, Veselin and Vechev, Martin},
  booktitle={International Conference on Machine Learning},
  pages={2933--2942},
  year={2016}
}

@inproceedings{le2012systematic,
  title={A systematic study of automated program repair: Fixing 55 out of 105 bugs for \$8 each},
  author={Le Goues, Claire and Dewey-Vogt, Michael and Forrest, Stephanie and Weimer, Westley},
  booktitle={2012 34th International Conference on Software Engineering (ICSE)},
  pages={3--13},
  year={2012},
  organization={IEEE}
}

@article{islam2021changes,
  title={What changes in where? an empirical study of bug-fixing change patterns},
  author={Islam, Md Rakibul and Zibran, Minhaz F},
  journal={ACM SIGAPP Applied Computing Review},
  volume={20},
  number={4},
  pages={18--34},
  year={2021},
  publisher={ACM New York, NY, USA}
}

@article{madeiral2018towards,
  title={Towards an automated approach for bug fix pattern detection},
  author={Madeiral, Fernanda and Durieux, Thomas and Sobreira, Victor and Maia, Marcelo},
  journal={arXiv preprint arXiv:1807.11286},
  year={2018}
}

@article{pan2009toward,
  title={Toward an understanding of bug fix patterns},
  author={Pan, Kai and Kim, Sunghun and Whitehead, E James},
  journal={Empirical Software Engineering},
  volume={14},
  number={3},
  pages={286--315},
  year={2009},
  publisher={Springer}
}

@article{yang2022mining,
  title={Mining {Python} fix patterns via analyzing fine-grained source code changes},
  author={Yang, Yilin and He, Tianxing and Feng, Yang and Liu, Shaoying and Xu, Baowen},
  journal={Empirical Software Engineering},
  volume={27},
  number={2},
  pages={1--37},
  year={2022},
  publisher={Springer}
}

@inproceedings{hanam2016discovering,
  title={Discovering bug patterns in JavaScript},
  author={Hanam, Quinn and Brito, Fernando S de M and Mesbah, Ali},
  booktitle={Proceedings of the 2016 24th ACM SIGSOFT international symposium on foundations of software engineering},
  pages={144--156},
  year={2016}
}

@article{campos2019discovering,
  title={Discovering common bug-fix patterns: A large-scale observational study},
  author={Campos, Eduardo C and Maia, Marcelo de A},
  journal={Journal of Software: Evolution and Process},
  volume={31},
  number={7},
  pages={1--28},
  year={2019},
  publisher={Wiley Online Library}
}

@inproceedings{qin2020understanding,
  title={Understanding memory and thread safety practices and issues in real-world Rust programs},
  author={Qin, Boqin and Chen, Yilun and Yu, Zeming and Song, Linhai and Zhang, Yiying},
  booktitle={Proceedings of the 41st ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={763--779},
  year={2020}
}

@book{klabnik2019rust,
  title={The Rust Programming Language (Covers Rust 2018)},
  author={Klabnik, Steve and Nichols, Carol},
  year={2019},
  publisher={No Starch Press}
}

@misc{dropbox,
  author = {Sebastian Moss},
  title ="How {Dropbox} pulled off its hybrid cloud transition",
  howpublished ="\url{https://www.datacenterdynamics.com/en/analysis/how-dropbox-pulled-off-its-hybrid-cloud-transition/}",
  year = {2021},
  month = {November},
  note = "Accessed November 21, 2022.",
}

@inproceedings{zhang2018empirical,
  title={An empirical study on TensorFlow program bugs},
  author={Zhang, Yuhao and Chen, Yifan and Cheung, Shing-Chi and Xiong, Yingfei and Zhang, Lu},
  booktitle={Proceedings of the 27th ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages={129--140},
  year={2018}
}

@article{dunn1973fuzzy,
  title={A fuzzy relative of the ISODATA process and its use in detecting compact well-separated clusters},
  author={Dunn, Joseph C},
  journal={J. Cybernetics},
  volume={3},
  number={3},
  pages={32--57},
  year={1973}
}

@inproceedings{cotroneo2019analyzing,
  title={Analyzing the context of bug-fixing changes in the openstack cloud computing platform},
  author={Cotroneo, Domenico and De Simone, Luigi and Iannillo, Antonio Ken and Natella, Roberto and Rosiello, Stefano and Bidokhti, Nematollah},
  booktitle={2019 IEEE 30th International Symposium on Software Reliability Engineering (ISSRE)},
  pages={334--345},
  year={2019},
  organization={IEEE}
}

@article{collins2003circle,
  title={A circle packing algorithm},
  author={Collins, Charles R and Stephenson, Kenneth},
  journal={Computational Geometry},
  volume={25},
  number={3},
  pages={233--256},
  year={2003},
  publisher={Elsevier}
}

@inproceedings{naish2009spectral,
  title={Spectral debugging with weights and incremental ranking},
  author={Naish, Lee and Lee, Hua Jie and Ramamohanarao, Kotagiri},
  booktitle={2009 16th Asia-Pacific Software Engineering Conference},
  pages={168--175},
  year={2009},
  organization={IEEE}
}

@inproceedings{jones2005empirical,
  title={Empirical evaluation of the tarantula automatic fault-localization technique},
  author={Jones, James A and Harrold, Mary Jean},
  booktitle={Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering},
  pages={273--282},
  year={2005}
}

@article{xie2013theoretical,
  title={A theoretical analysis of the risk evaluation formulas for spectrum-based fault localization},
  author={Xie, Xiaoyuan and Chen, Tsong Yueh and Kuo, Fei-Ching and Xu, Baowen},
  journal={ACM Transactions on Software Engineering and Methodology (TOSEM)},
  volume={22},
  number={4},
  pages={1--40},
  year={2013},
  publisher={ACM New York, NY, USA}
}

@article{gopinath2014mutant,
  title={Mutant census: An empirical examination of the competent programmer hypothesis},
  author={Gopinath, Rahul and Jensen, Carlos and Groce, Alex and others},
  journal={Technical Report, School of EECS, Oregon State University},
  year={2015}
}

@inproceedings{forrest2009genetic,
  title={A genetic programming approach to automated software repair},
  author={Forrest, Stephanie and Nguyen, ThanhVu and Weimer, Westley and Le Goues, Claire},
  booktitle={Proceedings of the 11th Annual conference on Genetic and evolutionary computation},
  pages={947--954},
  year={2009}
}

@inproceedings{nguyen2009using,
  title={Using execution paths to evolve software patches},
  author={Nguyen, ThanhVu and Weimer, Westley and Le Goues, Claire and Forrest, Stephanie},
  booktitle={2009 International Conference on Software Testing, Verification, and Validation Workshops},
  pages={152--153},
  year={2009},
  organization={IEEE}
}

@inproceedings{arcuri2011practical,
  title={A practical guide for using statistical tests to assess randomized algorithms in software engineering},
  author={Arcuri, Andrea and Briand, Lionel},
  booktitle={Proceedings of the 33rd international conference on software engineering},
  pages={1--10},
  year={2011}
}

@inproceedings{qi2013efficient,
  title={Efficient automated program repair through fault-recorded testing prioritization},
  author={Qi, Yuhua and Mao, Xiaoguang and Lei, Yan},
  booktitle={2013 IEEE International Conference on Software Maintenance},
  pages={180--189},
  year={2013},
  organization={IEEE}
}

@inproceedings{qi2014strength,
  title={The strength of random search on automated program repair},
  author={Qi, Yuhua and Mao, Xiaoguang and Lei, Yan and Dai, Ziying and Wang, Chengsong},
  booktitle={Proceedings of the 36th International Conference on Software Engineering},
  pages={254--265},
  year={2014}
}

@inproceedings{tan2015relifix,
  title={relifix: Automated repair of software regressions},
  author={Tan, Shin Hwei and Roychoudhury, Abhik},
  booktitle={2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  volume={1},
  pages={471--482},
  year={2015},
  organization={IEEE}
}

@article{martinez2015mining,
  title={Mining software repair models for reasoning on the search space of automated program fixing},
  author={Martinez, Matias and Monperrus, Martin},
  journal={Empirical Software Engineering},
  volume={20},
  number={1},
  pages={176--205},
  year={2015},
  publisher={Springer}
}

@phdthesis{martinez2012mining,
  title={Mining repair actions for guiding automated program fixing},
  author={Martinez, Matias and Monperrus, Martin},
  year={2012},
  school={Inria}
}

@inproceedings{li2021mirchecker,
  title={MirChecker: detecting bugs in Rust programs via static analysis},
  author={Li, Zhuohua and Wang, Jincheng and Sun, Mingshen and Lui, John CS},
  booktitle={Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security},
  pages={2183--2196},
  year={2021}
}

@book{Cannon1997RecommendedCS,
  title={Recommended C style and coding standards},
  author={Cannon, LW and Elliott, RA and Kirchhoff, LW and Miller, JH and Milner, JM and Mitze, RW and Schan, EP and Whittington, NO and Spencer, Henry and Keppel, David and others},
  year={1991},
  publisher={Pocket reference guide. Specialized Systems Consultants}
}